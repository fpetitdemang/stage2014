/**
 *
 * $Id$
 */
package uml.validation;

import org.eclipse.emf.common.util.EList;

import uml.Activity;
import uml.ActivityEdge;
import uml.ActivityGroup;
import uml.ActivityNode;
import uml.ActivityPartition;
import uml.InterruptibleActivityRegion;
import uml.StructuredActivityNode;
import uml.ValueSpecification;

/**
 * A sample validator interface for {@link uml.ActivityEdge}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ActivityEdgeValidator {
	boolean validate();

	boolean validateSource(ActivityNode value);
	boolean validateTarget(ActivityNode value);
	boolean validateRedefinedEdge(EList<ActivityEdge> value);
	boolean validateInPartition(EList<ActivityPartition> value);
	boolean validateGuard(ValueSpecification value);
	boolean validateWeight(ValueSpecification value);
	boolean validateInterrupts(InterruptibleActivityRegion value);
	boolean validateInStructuredNode(StructuredActivityNode value);
	boolean validateInGroup(EList<ActivityGroup> value);
	boolean validateActivity(Activity value);
}
