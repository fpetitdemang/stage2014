/**
 *
 * $Id$
 */
package uml.validation;

import org.eclipse.emf.common.util.EList;

import uml.AggregationKind;
import uml.Association;
import uml.DataType;
import uml.Property;
import uml.ValueSpecification;

/**
 * A sample validator interface for {@link uml.Property}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface PropertyValidator {
	boolean validate();

	boolean validateClass(uml.Class value);
	boolean validateDatatype(DataType value);
	boolean validateIsDerived(boolean value);
	boolean validateIsDerivedUnion(boolean value);
	boolean validateDefault(String value);
	boolean validateAggregation(AggregationKind value);
	boolean validateIsComposite(boolean value);
	boolean validateRedefinedProperty(EList<Property> value);
	boolean validateOwningAssociation(Association value);
	boolean validateDefaultValue(ValueSpecification value);
	boolean validateOpposite(Property value);
	boolean validateSubsettedProperty(EList<Property> value);
	boolean validateAssociation(Association value);
	boolean validateQualifier(EList<Property> value);
	boolean validateAssociationEnd(Property value);
}
