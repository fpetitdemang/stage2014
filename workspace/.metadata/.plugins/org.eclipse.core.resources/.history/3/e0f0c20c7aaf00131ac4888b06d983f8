/**
 *
 * $Id$
 */
package uml.validation;

import org.eclipse.emf.common.util.EList;

import uml.Classifier;
import uml.CollaborationUse;
import uml.Feature;
import uml.Generalization;
import uml.GeneralizationSet;
import uml.NamedElement;
import uml.Property;
import uml.Substitution;
import uml.UseCase;

/**
 * A sample validator interface for {@link uml.Classifier}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ClassifierValidator {
	boolean validate();

	boolean validateIsAbstract(boolean value);
	boolean validateGeneralization(EList<Generalization> value);
	boolean validatePowertypeExtent(EList<GeneralizationSet> value);
	boolean validateFeature(EList<Feature> value);
	boolean validateInheritedMember(EList<NamedElement> value);
	boolean validateRedefinedClassifier(EList<Classifier> value);
	boolean validateGeneral(EList<Classifier> value);
	boolean validateSubstitution(EList<Substitution> value);
	boolean validateAttribute(EList<Property> value);
	boolean validateRepresentation(CollaborationUse value);
	boolean validateCollaborationUse(EList<CollaborationUse> value);
	boolean validateOwnedUseCase(EList<UseCase> value);
	boolean validateUseCase(EList<UseCase> value);
}
