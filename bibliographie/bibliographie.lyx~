#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\begin_modules
theorems-starred
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Preview

\begin_layout Standard
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
pagenumbering{roman} 
\backslash
pagestyle{fancyplain} 
\backslash
thispagestyle{empty} 
\backslash
noindent 
\backslash
begin{center} 
\backslash
large{
\backslash
texttt{Académie de Montpellier}}
\backslash

\backslash
 
\backslash
Large{
\backslash
texttt{Université Montpellier II}}
\backslash

\backslash
 
\backslash
large{
\backslash
texttt{Sciences et Techniques du Languedoc}}
\backslash

\backslash
 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout


\backslash
vspace{1cm}
\end_layout

\begin_layout Plain Layout


\backslash
begin{center} 
\backslash
Huge{
\backslash
textbf{Étude Bibliographique de Master 2
\backslash

\backslash
}}  
\backslash
vspace{1.0cm} %
\backslash
Huge{
\backslash
textbf{MASTER 2}} 
\backslash
normalsize 
\backslash
begin{center} 
\backslash
vspace{1.0cm} effectuée au Laboratoire d'Informatique de Robotique
\backslash

\backslash
 et de Micro-électronique de Montpellier 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout


\backslash
vspace{2mm} %
\backslash
Large{
\backslash
textbf{franck PETITDEMANGE}}
\end_layout

\begin_layout Plain Layout


\backslash
vspace{0.1cm} 
\backslash
normalsize
\end_layout

\begin_layout Plain Layout


\backslash
vspace{3mm}
\end_layout

\begin_layout Plain Layout


\backslash
large{Spécialité} : 
\backslash
textbf{AIGLE}
\backslash

\backslash
 %
\backslash
Large{Formation Doctorale} : 
\backslash
textbf{Informatique}
\backslash

\backslash
 %
\backslash
large{{
\backslash
'E}cole Doctorale} : 
\backslash
textbf{Information, Structures, Systèmes} 
\backslash
vspace{1.0cm}
\end_layout

\begin_layout Plain Layout


\backslash
LARGE{
\backslash
textbf{Personnalisation de page web : Application à l'amélioration de l'accessib
ilité du web}} 
\backslash
vspace{2mm}
\end_layout

\begin_layout Plain Layout


\backslash
begin{center}   par 
\backslash
textbf{Franck~PETITDEMANGE} 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout


\backslash
vspace{2mm}
\end_layout

\begin_layout Plain Layout


\backslash
vspace{4cm}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Mars 2014}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vspace{0.5cm}
\end_layout

\begin_layout Plain Layout

Sous la direction de 
\backslash
textbf{Marianne~HUCHARD, Michel~MEYNARD, Yoann~BONAVERO}
\end_layout

\begin_layout Plain Layout


\backslash
vspace{5mm}
\end_layout

\begin_layout Plain Layout

%
\backslash
begin{table}[hbt] %
\backslash
begin{center} %
\backslash
begin{tabular}{ l l l} %Messieurs & {
\backslash
em } & Rapporteurs
\backslash

\backslash
 %& {
\backslash
em } & 
\backslash

\backslash
 %& {
\backslash
em } & 
\backslash

\backslash
 %
\backslash

\backslash
 %Messieurs& {
\backslash
em } & Examinateurs 
\backslash

\backslash
 %& {
\backslash
em } & 
\backslash

\backslash
 %& {
\backslash
em } & 
\backslash

\backslash
 %
\backslash

\backslash
 %Monsieur & {
\backslash
em Evripidis BAMPIS} &  Directeur de thèse
\backslash

\backslash
 %& {
\backslash
em  X} & 
\backslash

\backslash
 %
\backslash
end{tabular} %
\backslash
end{center} %
\backslash
end{table}
\end_layout

\begin_layout Plain Layout

%
\backslash
vspace{.7cm}
\end_layout

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tableofcontents
\end_layout

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduction et motivation
\end_layout

\begin_layout Standard
Le sujet du stage s'inscrit dans le contexte de personnalisation d'un page
 web.
 L'objectif visé est de fournir des méthodes et des outils afin d'adapter
 une page suivant les souhaits d'un utilisateur.
 
\end_layout

\begin_layout Standard
La première problématique est la restructuration d'une page web.
 On souhaite expérimenter une approche basée sur les méta-modèles.
 L'idée étant d'extraire la structure d'une page et d'en construire une
 représentation plus abstraite.
 Cela doit nous permettre de s'affranchir de la diversité de conception
 de ces dernières.
 A partir de cette représentation on veut lui appliquer des transformations,
 puis générer une nouvelle page conforme aux transformations.
 
\end_layout

\begin_layout Standard
La conception des pages web s'articule autour : d'un langage pour décrire
 la structure du document (HTML) et d'un langage pour décrire la mise en
 forme du document (CSS).
 Les pages sont constituées d’éléments hétérogènes : une page est constituée
 d'un contenu principal, d'un menu de navigation, de publicité, etc...
 Chacun de ces éléments représentent une sous-structure de la page.
 Lorsqu'on regarde une page web depuis un navigateur, on constate que ces
 éléments sont structurés de façon sémantique, ils sont organisés selon
 leur sens.
 La difficulté dans la tâche de d'extraction de la structure d'une page
 est dû au manque d'expressivité de HTML.
 En effet, la norme actuelle de HTML (HTML 4), ne fournit pas de moyen de
 délimiter les éléments du document en fonction de leur sémantique.
 Par exemple, on ne peut pas délimiter de manière explicite la structure
 d'un menu dans une page avec ce langage.
 Le constat est que l'information de la structure d'une page apparaît principale
ment dans la mise en page.
 La structure d'une page est explicitée à travers l'utilisation de police,
 de couleur ou plus généralement d’élément visuel pour caractériser les
 contenus qui ont la même signification.
\end_layout

\begin_layout Standard
La seconde problématique est la définition d'un protocole d'acquisition
 et d'apprentissage automatique des souhaits de transformation d'une page.
 (...)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Modele de page web
\end_layout

\begin_layout Subsection
Introduction
\end_layout

\begin_layout Paragraph
Modèle
\end_layout

\begin_layout Definition
Un modèle est une représentation simplifié d'une partie du monde.
 C'est une abstraction du système étudié suivant un point de vue.
 Par exemple une carte routière est une abstraction d'un réseau routier,
 il existe plusieurs type de carte suivant ce que l'on veut étudier (chemin
 pédestre, chemin routier etc).
 L’intérêt d'un modèle est de mieux comprendre un système.
\end_layout

\begin_layout Definition
« Pour un observateur A, M est un modèle de l'objet O, si M aide A à répondre
 aux questions qu'il pose sur O » (Minsky) 
\end_layout

\begin_layout Paragraph
Métamodèle
\end_layout

\begin_layout Definition
Pour exprimer un modèle, nous avons besoin de pouvoir exprimer ces concepts.
 Un métamodèle, c'est un modèle qui fournit un langage pour exprimer un
 modèle.
 Littéralement, c'est un modèle de modèle.
\end_layout

\begin_layout Standard
Dans le cadre de notre sujet, on souhaite à terme l’adaptation d'une page
 web.
 Ici le système étudié est une page web.
 On s'interesse à la perception qu'un utilisateur peut avoir d'une page
 à travers un navigateur web.
 Il est important d'en cerner les concepts intrinsèques.
 L'objectif étant de concevoir un méta-modele suffisament riche à l'expression
 d'un modèle conforme à la représentation qu'un utilisateur à d'une page,
 afin d'en faciliter l'expression de transformation.
\end_layout

\begin_layout Standard
Une page web possède le rôle d'affichage d'un contenu structuré et mise
 en forme.
 Le contenu peut être de type texte, image, vidéo, etc.
 Le WC3 décrit une page web comme une ressource.
 Chaque ressource étant une unité d'information.
 Cependant dans la conception contemporaine des pages, celle-ci peut encore
 être découpé en unité d'information.
 Ainsi on peut voir une page comme une composition d'élément graphique apportant
 chacun une information.
 Par exemple, une page est composé d'un menu de navigation, d'une entête,
 d'un pied de page, de formulaire et de widget.
 Chacun de ces éléments possède un type, un état et des propriétés.
 
\end_layout

\begin_layout Standard
Le type correspond à la nature de celui-ci.
 Il représente ce qu'un utilisateur attend de ce dernier.
 Il est attendu d'un menu de navigation qu'il nous permette de naviguer
 dans les page du site web.
\end_layout

\begin_layout Standard
Certain objet fournissent une interaction avec l'utilisateur qui est susceptible
 de modifier l'état d'un objet.
 Par exemple certain menu cache les différents liens de navigations, au
 moment où l'utilisateur survole le menu celui-ci affiche les différents
 liens.
 
\end_layout

\begin_layout Standard
Les objets possèdent également un ensemble de propriétés, quelque fois intrinsèq
ue à leur type.
 Par exemple un formulaire possède des champs de saisie.
 D'autre propriétés peuvent être la couleur et la police du texte, la hauteur,
 la largeur, et la position d'une objets dans le page.
 
\end_layout

\begin_layout Subsection
HTML 4
\end_layout

\begin_layout Standard
HTML 4 
\begin_inset CommandInset citation
LatexCommand cite
key "HTML_4"

\end_inset

 est un langage permettant de structurer les données sur le web.
 C'est le langage standard actuelle des pages web.
 Les données décritent peuvent être de type texte, ou plus généralement
 de type multimédia.
 Il permet de structurer le contenu et d'inclure des élements de mise en
 page.
\end_layout

\begin_layout Standard
HTML 4 définit des types d’éléments qui représente des structures ou des
 comportement voulu dans une page web.
 HTML 4 permet de décrire trois composant principaux : 
\end_layout

\begin_layout Enumerate
Le contenu textuel : paragraphe, titre (beaucoup de balise de présentation)
 
\end_layout

\begin_layout Enumerate
Les liens hypertextes 
\end_layout

\begin_layout Enumerate
Les images, objets
\end_layout

\begin_layout Paragraph
Structuration générique
\end_layout

\begin_layout Standard
HTML propose un mécanisme générique pour la structuration des documents
 web.
 Ce mécanisme gravite autour des éléments de type en bloc, en ligne et leurs
 identifiants respective : id et classe.
\end_layout

\begin_layout Subparagraph
id et class
\end_layout

\begin_layout Standard
Chaque élément peut se voir attribuer un identifiant ou une classe d'appartenanc
e.
 
\end_layout

\begin_layout Standard
id assigne un nom à un élément.
 Ce nom doit être unique dans le document.
 Il possède plusieurs rôle dans HTML : 
\end_layout

\begin_layout Itemize
sélecteur dans une feuille de style 
\end_layout

\begin_layout Itemize
ancre cible dans lien hypertexte 
\end_layout

\begin_layout Itemize
etc...
\end_layout

\begin_layout Standard
class, au contraire, assigne un ou plusieurs noms de classe à un élément
 ; on peut dire de l'élément qu'il appartient à ces classes.
 Un nom de classe peut être partagé par plusieurs instances d'éléments.
 L'attribut class a plusieurs rôles dans HTML : 
\end_layout

\begin_layout Itemize
comme sélecteur dans une feuille de style (quand l'auteur souhaite assigner
 une information de style à un ensemble d'éléments) .
 
\end_layout

\begin_layout Itemize
pour un traitement universel par les agents utilisateurs.
\end_layout

\begin_layout Subparagraph
En bloc et en ligne
\end_layout

\begin_layout Standard
Certains éléments, qui peuvent apparaître dans l'élément BODY, sont dits
 être de niveau « bloc » tandis que d'autres sont dits de niveau « en-ligne ».
 La distinction se fondent sur plusieurs notions : 
\end_layout

\begin_layout Itemize
Le modèle de contenu : les éléments de bloc peuvent contenir des éléments
 en-ligne et d'autres éléments de bloc.
 Les éléments en-ligne ne peuvent contenir que des données et d'autres éléments
 en-ligne.
 L'idée inhérente à cette distinction structurelle, c'est que les éléments
 de bloc créent des structures « plus grandes » que les éléments en-ligne.
 
\end_layout

\begin_layout Itemize
Le formatage : les éléments de bloc sont formatés différemment des éléments
 en-ligne.
 En général, les éléments de bloc commencent sur une nouvelle ligne, et
 non les éléments en-ligne.
 
\end_layout

\begin_layout Subparagraph
Le regroupement des éléments
\end_layout

\begin_layout Standard
Les éléments <div> et <span> utilisé conjointement avec les attributs id
 et classe sont au cœur du mécanisme générique de structuration d'un document.
 Ces éléments définissent le contenu comme étant en-ligne (SPAN) ou de bloc
 (DIV) mais n'imposent aucune autre expression de présentation sur le contenu.
 La sémantique de ces balises est neutre, elle ne fournit aucune informations,
 il n' y a aucune information sur l'usage que son auteur en fait.
\end_layout

\begin_layout Subsection
HTML 5
\end_layout

\begin_layout Standard

\emph on
HTML 5 étend HTML 4 en amenant de nouveaux éléments.
 Ces éléments ajoutent une valeur sémantique aux structures de HTML 4.
 HTML 5 spécifie sont modèle de structure générique par une catégorisation
 des éléments d'une page.
 (...)
\end_layout

\begin_layout Subsection
ARIA
\end_layout

\begin_layout Subsection
Discussion
\end_layout

\begin_layout Paragraph

\emph on
HTML 4
\end_layout

\begin_layout Standard

\emph on
HTML 4 fournit quelque idiome pour structurer les éléments d'un document.
 Il fournit un langage riche pour décrire les éléments de type texte et
 les hyperliens, mais un langage peu adapter pour décrire la structure d'une
 page web, dans le contexte actuel de l'exploitation de ses dernières.
 En effet le contenu décrit dans les pages web actuelles est très hétérogène,
 HTML 4 net permet pas de delimiter de manière explicite la structure sémantique
 d'une page.
 HTML 4 n'est pas un support assez riche pour être le support d'un méta-modèle
 exprimant le modèle d'une page web suivant nos besoins.
\end_layout

\begin_layout Paragraph

\emph on
HTML 5
\end_layout

\begin_layout Standard

\emph on
Ces balises balises répondent à un besoin de structuration du document possedant
 des données hétérogènes.
 Contrairement à HTML 4, la sémantique de la structure et les relations
 des éléments est définit de manière explicite.
 
\end_layout

\begin_layout Paragraph

\emph on
ARIA
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Extraction structure 
\end_layout

\begin_layout Subsection
Introduction
\end_layout

\begin_layout Subsection
Approche segmentation visuelle
\end_layout

\begin_layout Subsection
Approche stochastique
\end_layout

\begin_layout Subsection
Discution
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Detection d'objet
\end_layout

\begin_layout Subsection
Introduction
\end_layout

\begin_layout Standard
Dans le cadre de notre sujet on explore différentes pistes pour la détection
 d'objet type définit à priori.
 La contrainte imposée par le web est la diversité des structures ayant
 la même fonction.
 On émet l'hypothèse que les structures proches ont la même fonction
\begin_inset CommandInset citation
LatexCommand cite
key "Comparing_multiple_RNA_secondary"

\end_inset

.
\end_layout

\begin_layout Subsection
Tree pattern matching
\end_layout

\begin_layout Standard
Ces problèmes sont étudiés dans le domaine de la recherche d'information
 (RI).
 Ce domaine étudie la manière de retrouver des informations dans un corpus.
 
\end_layout

\begin_layout Standard
Une approche est la comparaison d'arbre.
 Cette approche dans la RI consiste à trouver tous les sous-arbres isomorphe
 avec le pattern en entrée.
 Pour faire la comparaison entre deux structures, on utilise le concept
 de distance entre deux arbres.
\end_layout

\begin_layout Definition
La distance entre deux arbres est calculée par la plus petite ou la moins
 coûteuse séquence d'opération d'édition (substitution, suppression et insertion
) qui permet la transformation d'un arbre vers un autre.
 
\end_layout

\begin_layout Standard
Notons 
\begin_inset Formula $\Lambda$
\end_inset

 un noeud vide.
 Une opération d'édition est ecrit 
\begin_inset Formula $b\rightarrow c$
\end_inset

 , ou b et c sont soit un noeud, soit 
\begin_inset Formula $\Lambda$
\end_inset

 .
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $b\rightarrow c$
\end_inset

 est une opération de substition si 
\begin_inset Formula $b\neq\Lambda$
\end_inset

 et 
\begin_inset Formula $c\neq\Lambda$
\end_inset

, 
\end_layout

\begin_layout Itemize
une opération de suppression si 
\begin_inset Formula $b\neq\Lambda\doteq c$
\end_inset

, 
\end_layout

\begin_layout Itemize
et une opération d'insertion si 
\begin_inset Formula $b=\Lambda\neq c$
\end_inset


\end_layout

\begin_layout Standard
Pour exprimer la séquence d'opération élémentaire qui transforme l'arbre,
 on utilise le concept de mapping, introduit 
\begin_inset CommandInset citation
LatexCommand cite
key "tree-to-tree"

\end_inset

.
 Un mapping établie une correspondance un-à-un entre les nœuds de deux arbres
 ordonnés et qui préservent l'ordre des nœuds.
 
\end_layout

\begin_layout Definition*
Un Mapping 
\begin_inset Formula $M$
\end_inset

 de l'arbre T1 vers l'arbre T2 est un ensemble de paire ordonnée d'entier
 (i, j), 
\begin_inset Formula $1\leqslant i\leqslant n1$
\end_inset

, 
\begin_inset Formula $1\leq j\leq n2$
\end_inset

, satisfaisant les conditions suivantes, pour tous 
\begin_inset Formula $(i1,j1),(i2,j2)\in M$
\end_inset

:
\end_layout

\begin_layout Itemize
i1=i2 si et seulement si, j1=j2 (one-to-one condition);
\end_layout

\begin_layout Itemize
t1[i1] est à droite de t1[i2], si est seulement si, t2[j1] est à gauche
 de t2[j2] (preservation de l'ordre des noeuds frères);
\end_layout

\begin_layout Itemize
t1[i1] est un ancêtre de t1[i2] si et seulement si, t2[j1] est un ancêtre
 de t2[j2] (preservation de l'ordre des ancêtres);
\end_layout

\begin_layout Definition*
Soit M un mapping entre les arbres T1 et T2 décrivant des opérations de
 modification.
 S est l'ensemble de pair 
\begin_inset Formula $(i,j)\in M$
\end_inset

, D l'ensemble des nœuds T1[i] n'ayant pas de paire 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $(i,j)\in M$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 , et I l'ensemble des nœuds T2[j] n'ayant pas de paire 
\begin_inset Formula $(i,j)\in M$
\end_inset

.
 Le coût du mapping est donné par 
\begin_inset Formula $|S|p+|I|q+|D|r$
\end_inset

| , ou p est le coût des substitution non identique, q est le coût des insertion
s (1), r est le coût d'une suppression (1), le coût des substitution identique
 est 0.
 
\end_layout

\begin_layout Paragraph*
Quatre mesures de distances 
\end_layout

\begin_layout Standard
Plusieurs mesures de distance existent, chacune d'elle mettant en avant
 certaine propriétés fonctionnelles d'une structure.
 Ces mesures de distance imposent des contraintes sur le mapping.
 Dans la littérature en recense principalement 4 mesures : Distance de modificat
ion, distance d'alignement, distance de sous-arbre isolé, distance descendante.
\end_layout

\begin_layout Subparagraph
Distance de modification
\end_layout

\begin_layout Standard
C'est le coût minimum du mapping d'un arbre T1 vers T2.
 
\end_layout

\begin_layout Subparagraph
Distance d'alignement
\end_layout

\begin_layout Standard
Coût minimum du mapping n'ayant que des opérations d'insertion de nœud pour
 que T1 et T2 soit isomorphe.
 Principalement utile pour connaître le coût de recouvrement entre deux
 arbres.
\end_layout

\begin_layout Subparagraph
Distance de sous-arbre isolé
\end_layout

\begin_layout Standard
La distance est obtenu en imposant sur le mapping la contrainte que deux
 sous-arbres disjoints de T1 doivent être mappés à deux sous-arbres disjoints
 de T2.
 S'avère très utile dans le comparaison d'arbre de classification
\begin_inset CommandInset citation
LatexCommand cite
key "Takana"

\end_inset

.
 Elle correspond au côut minimum du mapping de sous-arbres isolés de T1
 vers T2.
\end_layout

\begin_layout Subparagraph

\emph on
Distance descendante
\end_layout

\begin_layout Standard

\emph on
Utilisé pour trouver la plus grande sous-strucucture commune entre deux
 arbres (...)
\end_layout

\begin_layout Paragraph
Algorithmes
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "tree-to-tree"

\end_inset

 propose un algorithme de programmation dynamique pour résoudre la question
 de distance d'arbre en temps séquentiel 
\begin_inset Formula $O(|T1|x|T2|xmin(depth(T1),leaves(T1))xmin(depth(T2),leaves(T2)))$
\end_inset

 .
\end_layout

\begin_layout Subsection
Arbre de décision
\end_layout

\begin_layout Subsection
Discution
\end_layout

\begin_layout Standard
Dans le cadre de notre problématique, il est intéressant d'utiliser la distance
 de modification entre la structure d'un objet définit à priori et une structure
 extraite d'une page web.
 Par exemple, si nous souhaitons connaître le rôle d'un objet extrait d'une
 page, on peut le comparer à la collection d'objet définit à priori et détermine
r de quel objet il est le plus proche.
 Cette distance à un rôle d'indice de similarité.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "bibliographie/biblio"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
