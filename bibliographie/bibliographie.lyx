#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{graphicx}
\usepackage{listings}
\end_preamble
\use_default_options true
\begin_modules
theorems-starred
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Preview

\begin_layout Standard
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
pagenumbering{roman} 
\backslash
pagestyle{fancyplain} 
\backslash
thispagestyle{empty} 
\backslash
noindent 
\backslash
begin{center} 
\backslash
large{
\backslash
texttt{Académie de Montpellier}}
\backslash

\backslash
 
\backslash
Large{
\backslash
texttt{Université Montpellier II}}
\backslash

\backslash
 
\backslash
large{
\backslash
texttt{Sciences et Techniques du Languedoc}}
\backslash

\backslash
 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout


\backslash
vspace{1cm}
\end_layout

\begin_layout Plain Layout


\backslash
begin{center} 
\backslash
Huge{
\backslash
textbf{Étude Bibliographique de Master 2
\backslash

\backslash
}}  
\backslash
vspace{1.0cm} %
\backslash
Huge{
\backslash
textbf{MASTER 2}} 
\backslash
normalsize 
\backslash
begin{center} 
\backslash
vspace{1.0cm} effectuée au Laboratoire d'Informatique de Robotique
\backslash

\backslash
 et de Micro-électronique de Montpellier 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout


\backslash
vspace{2mm} %
\backslash
Large{
\backslash
textbf{franck PETITDEMANGE}}
\end_layout

\begin_layout Plain Layout


\backslash
vspace{0.1cm} 
\backslash
normalsize
\end_layout

\begin_layout Plain Layout


\backslash
vspace{3mm}
\end_layout

\begin_layout Plain Layout


\backslash
large{Spécialité} : 
\backslash
textbf{AIGLE}
\backslash

\backslash
 %
\backslash
Large{Formation Doctorale} : 
\backslash
textbf{Informatique}
\backslash

\backslash
 %
\backslash
large{{
\backslash
'E}cole Doctorale} : 
\backslash
textbf{Information, Structures, Systèmes} 
\backslash
vspace{1.0cm}
\end_layout

\begin_layout Plain Layout


\backslash
LARGE{
\backslash
textbf{Personnalisation de page web : application à l'amélioration de l'accessib
ilité du web}} 
\backslash
vspace{2mm}
\end_layout

\begin_layout Plain Layout


\backslash
begin{center}   par 
\backslash
textbf{Franck~PETITDEMANGE} 
\backslash
end{center}
\end_layout

\begin_layout Plain Layout


\backslash
vspace{2mm}
\end_layout

\begin_layout Plain Layout


\backslash
vspace{4cm}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Mars 2014}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vspace{0.5cm}
\end_layout

\begin_layout Plain Layout

Sous la direction de 
\backslash
textbf{Marianne~HUCHARD, Michel~MEYNARD, Yoann~BONAVERO}
\end_layout

\begin_layout Plain Layout


\backslash
vspace{5mm}
\end_layout

\begin_layout Plain Layout

%
\backslash
begin{table}[hbt] %
\backslash
begin{center} %
\backslash
begin{tabular}{ l l l} %Messieurs & {
\backslash
em } & Rapporteurs
\backslash

\backslash
 %& {
\backslash
em } & 
\backslash

\backslash
 %& {
\backslash
em } & 
\backslash

\backslash
 %
\backslash

\backslash
 %Messieurs& {
\backslash
em } & Examinateurs 
\backslash

\backslash
 %& {
\backslash
em } & 
\backslash

\backslash
 %& {
\backslash
em } & 
\backslash

\backslash
 %
\backslash

\backslash
 %Monsieur & {
\backslash
em Evripidis BAMPIS} &  Directeur de thèse
\backslash

\backslash
 %& {
\backslash
em  X} & 
\backslash

\backslash
 %
\backslash
end{tabular} %
\backslash
end{center} %
\backslash
end{table}
\end_layout

\begin_layout Plain Layout

%
\backslash
vspace{.7cm}
\end_layout

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tableofcontents
\end_layout

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduction et motivation
\end_layout

\begin_layout Standard
Le world wild web (www) est un reseau de ressource.
 La publication de ces ressources repose sur un langage universellement
 compréhensible et accepté par tous les ordinateurs : HTML.
 Historiquement conçut pour faciliter l'échange d'article dans la communauté
 scientifique.
 La démocratisation du web à fait radicalement évoluer le contenu d'une
 page web, sans pour autant que le langage ne suivent ces évolutions.
 Ainsi les auteurs de page web ont détourné les pratiques de conception
 d'une page de manière anarchique.
 Ce manque d'homogénétité complique la compréhension du contenu publié sur
 le www par une machine.
 Faisant perdre la propriété universelle du web voulu par son créateur Tim
 Berners Lee : 
\end_layout

\begin_layout Quotation
\begin_inset Quotes eld
\end_inset

La puissance du Web réside dans son universalité.
 L'accès à tous, quel que soit son handicap est un aspect essentiel
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Standard
Ceci introduit la motivation de ce stage et les problématiques qui en découlent.
 
\end_layout

\begin_layout Standard
Le sujet du stage est la personnalisation d'une page web.
 L'objectif est de fournir des méthodes et des outils afin d'adapter une
 page suivant les souhaits d'un lecteur.
 On s'interesse à une application pour l'amélioration de l'accessibilité
 des pages web pour les personnes en situation de handicap visuel.
 
\end_layout

\begin_layout Standard
L'adaptation d'une page web implique notre première problématique : la restructu
ration d'une page web.
 On souhaite expérimenter une approche basée sur les méta-modèles.
 L'idée étant d'extraire la structure d'une page et d'en construire une
 représentation plus abstraite.
 Cela doit nous permettre de s'affranchir de la diversité de conception
 de ces dernières.
 A partir de cette représentation on veut lui appliquer des transformations,
 puis générer une nouvelle page conforme aux transformations.
 
\end_layout

\begin_layout Standard
La conception des pages web s'articule autour : d'un langage pour décrire
 la structure du document (HTML) et d'un langage pour décrire la mise en
 forme du document (CSS).
 Les pages sont constituées d’éléments hétérogènes : une page est constituée
 d'un contenu principal, d'un menu de navigation, de publicité, etc...
 Chacun de ces éléments représentent une sous-structure de la page.
 Lorsqu'on regarde une page web depuis un navigateur, on constate que ces
 éléments sont structurés de façon sémantique, ils sont organisés selon
 leur sens.
 La difficulté dans la tâche de d'extraction de la structure d'une page
 est dû au manque d'expressivité de HTML.
 En effet, la norme actuelle de HTML (HTML 4), ne fournit pas de moyen de
 délimiter les éléments du document en fonction de leur sémantique.
 Par exemple, on ne peut pas délimiter de manière explicite la structure
 d'un menu dans une page avec ce langage.
 Le constat est que l'information de la structure d'une page apparaît principale
ment dans la mise en page.
 La structure d'une page est explicitée à travers l'utilisation de police,
 de couleur ou plus généralement d’élément visuel pour caractériser les
 contenus qui ont la même signification.
\end_layout

\begin_layout Standard
La seconde problématique est la définition d'un protocole d'acquisition
 et d'apprentissage automatique des souhaits de transformation d'une page.
 (...)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Modele de page web
\end_layout

\begin_layout Subsection
Introduction
\end_layout

\begin_layout Paragraph
Modèle
\end_layout

\begin_layout Definition
Un modèle est une représentation simplifié d'une partie d'un système.
 C'est une abstraction du système étudié suivant un point de vue.
 Par exemple une carte routière est une abstraction d'un réseau routier,
 il existe plusieurs type de carte suivant ce que l'on veut étudier (chemin
 pédestre, chemin routier etc).
 L’intérêt d'un modèle est de mieux comprendre un système.
\end_layout

\begin_layout Quotation
\begin_inset Quotes eld
\end_inset

Pour un observateur A, M est un modèle de l'objet O, si M aide A à répondre
 aux questions qu'il pose sur O
\begin_inset Quotes erd
\end_inset

 (Minsky) 
\end_layout

\begin_layout Paragraph
Métamodèle
\end_layout

\begin_layout Definition
Pour exprimer un modèle, nous avons besoin de pouvoir exprimer ces concepts.
 Un métamodèle, c'est un modèle qui fournit un langage pour exprimer un
 modèle.
 Littéralement, c'est un modèle de modèle.
\end_layout

\begin_layout Standard
Dans le cadre de notre sujet, on souhaite à terme l’adaptation d'une page
 web.
 Ici le système étudié est une page web.
 Il est important d'en cerner les concepts intrinsèques.
 L'objectif étant de concevoir un méta-modele suffisament riche à l'expression
 d'un modèle conforme à la représentation qu'un utilisateur à d'une page,
 afin d'en faciliter l'expression de transformation.
\end_layout

\begin_layout Standard
Une page web possède le rôle d'affichage d'un contenu structuré et mise
 en forme.
 On peut voir une page comme une composition d'élément graphique agencé
 dans l'espace de la page et apportant une information.
 Par exemple, une page est composé d'un menu de navigation, d'une entête,
 d'un pied de page, de formulaire et de widget (on entend par widget des
 éléments de contrôle, comme des barres de progression, des selecteurs de
 couleurs, etc).
 Chacun de ces éléments possède un type, un état et des propriétés.
 
\end_layout

\begin_layout Standard
Le type correspond à la nature de celui-ci.
 Il représente ce qu'un utilisateur attend de ce dernier.
 Il est attendu d'un menu de navigation qu'il nous permette de naviguer
 dans les page du site web.
\end_layout

\begin_layout Standard
Certain objet fournissent une interaction avec l'utilisateur qui est susceptible
 de modifier l'état d'un objet.
 Par exemple certain menu cache les différents liens de navigations, au
 moment où l'utilisateur survole le menu celui-ci affiche les différents
 liens.
 
\end_layout

\begin_layout Standard
Les objets possèdent également un ensemble de propriétés, quelque fois intrinsèq
ue à leur type.
 Par exemple un formulaire possède des champs de saisie.
 D'autre propriétés peuvent être la couleur et la police du texte, la hauteur,
 la largeur, et la position d'une objets dans le page.
 
\end_layout

\begin_layout Standard
On s'interesse à un modèle capable de modéliser une page dans le but d'en
 abstraire la structure, les differents elements la composant, les relations
 entre ces éléments, leurs natures et leurs comportements.
 On propose d'étudier et de comparer le langage standart du publication
 de document sur le web, HTML, dans la norme HTML 4 et 5 mais aussi une
 toxonomie pour la description d'interface graphique ARIA.
\end_layout

\begin_layout Subsection
HTML 4
\end_layout

\begin_layout Standard
HTML 4 
\begin_inset CommandInset citation
LatexCommand cite
key "HTML_4"

\end_inset

 est un langage permettant la publication de contenu sur le web.
 C'est le langage standard actuelle des pages web.
 Les données décritent peuvent être de type texte, ou plus généralement
 de type multimédia.
 Il permet de structurer le contenu et d'inclure des élements de mise en
 page.
 Le contenu est organisé de manière hierarchique en le découpant en section
 et sous-section.
 
\end_layout

\begin_layout Paragraph
Structuration générique
\end_layout

\begin_layout Standard
HTML 4 propose un mécanisme générique pour la composition du contenu formant
 la structure des pages web.
 Ce mécanisme gravite autour des éléments de type en bloc, en ligne et leurs
 identifiants respective : id et classe.
\end_layout

\begin_layout Subparagraph
En bloc et en ligne
\end_layout

\begin_layout Standard
Certains éléments sont dits de niveau « bloc » tandis que d'autres sont
 dits de niveau « en-ligne ».
\end_layout

\begin_layout Itemize
Les éléments de bloc peuvent contenir des éléments en-ligne et d'autres
 éléments de bloc.
 Les éléments en-ligne ne peuvent contenir que des données et d'autres éléments
 en-ligne.
 L'idée inhérente à cette distinction structurelle, c'est que les éléments
 de bloc créent des structures « plus grandes » que les éléments en-ligne.
 
\end_layout

\begin_layout Itemize
Les éléments de bloc sont formatés différemment des éléments en-ligne.
 En général, les éléments de bloc commencent sur une nouvelle ligne, et
 non les éléments en-ligne.
 
\end_layout

\begin_layout Subparagraph
id et class
\end_layout

\begin_layout Standard
Chaque élément peut se voir attribuer un identifiant ou une classe d'appartenanc
e.
 
\emph on
id
\emph default
 assigne un nom à un élément.
 Ce nom est unique dans le document.
 
\emph on
class
\emph default
 au contraire, assigne un ou plusieurs noms de classe à un élément; on peut
 dire de l'élément qu'il appartient à ces classes.
 Un nom de classe peut être partagé par plusieurs instances d'éléments.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Les éléments DIV (en bloc) utilisés conjointement avec les attributs id
 et classe sont au cœur du mécanisme générique de structuration d'un document.
 DIV permet de divisé le contenu d'un document en section et sous-section
 pour décrire sa structure.
 Les elements DIV ayant une sémantique neutre, c'est l'auteur du contenu
 qui attribut (de manière arbitraire) un nom de 
\emph on
class
\emph default
 ou un 
\emph on
id
\emph default
.
 Le but étant de délimité les contenus suivant leurs sémantiques.
 On note que ce mécanisme permet à l'auteur de spécifier lui même les elements
 structurels.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}[frame=single, language=html, caption={Exemple de structuration
 avec HTML 4}]
\end_layout

\begin_layout Plain Layout

<body>
\end_layout

\begin_layout Plain Layout

	<div id="header" ></div>
\end_layout

\begin_layout Plain Layout

	<div class="main_menu"></div>
\end_layout

\begin_layout Plain Layout

	<div class="article"></div>
\end_layout

\begin_layout Plain Layout

	<div class="article"></div>
\end_layout

\begin_layout Plain Layout

	<div id="footer"></div>
\end_layout

\begin_layout Plain Layout

</body>
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Architecture page web HTML 4
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\begin_layout Plain Layout


\backslash
includegraphics[width=300px]{img/architecture_Geekos_HTML4-294x300.jpg}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
HTML 5
\end_layout

\begin_layout Standard
HTML 5 
\begin_inset CommandInset citation
LatexCommand cite
key "HTML_5"

\end_inset

 étend HTML 4.
 La norme HTML 4 est toujours rétroactive, cependant quelques éléments ont
 été dépréciés, particulièrement les élements de mise en forme.
 HTML 5 remplace la structure générique de HTML 4 par un nouveau modèle.
 Ce modèle amène de nouveaux élements apportent une sémantique standard
 à la structure d'une page.
 
\end_layout

\begin_layout Paragraph

\end_layout

\begin_layout Paragraph
Structuration 
\end_layout

\begin_layout Standard
HTML 5 propose toujours le même mécanisme générique de HTML 4 (éléments
 de type en bloc, en ligne et leurs identifiants respective : id et classe).
 HTML 5 propose une catégorisation des éléments spécifiant chacun un modèle
 de contenu, c'est à dire les règles définissant le type de contenu qu'il
 peut avoir.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Catégories des éléments HTML 5
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\begin_layout Plain Layout


\backslash
includegraphics[width=10cm]{img/contenthtml5.png}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Metadata content (contenu de meta-données) : catégorie des elements qui
 modifient le comportement ou la présentation du document, insèrent des
 liens vers d'autres documents ou comportent des informations sur la structure
 même des données.
\end_layout

\begin_layout Itemize
Flow content (contenu de flux) : catégorie principale, regroupe la quasi-totalit
é des éléments disponibles en HTML5 
\end_layout

\begin_layout Itemize
Sectioning content (contenu sectionnant) : catégorie des éléments qui créent
 une section dans le plan d'un document, définit la portée contextuelle
 des éléments
\end_layout

\begin_layout Itemize
Heading content (contenu de titre) : définit le titre d'un contenu
\end_layout

\begin_layout Itemize
Phrasing content (contenu phrasé) : catégorie qui regroupe les elements
 définissant du texte
\end_layout

\begin_layout Itemize
Embedded content (contenu integré) : contient tous les éléments qui appel
 des ressources externe au document
\end_layout

\begin_layout Itemize
Interactive content (contenu interactif) : regroupe les éléments conçuent
 pour une interaction avec l'utilisateur
\end_layout

\begin_layout Paragraph
Regroupement des éléments
\end_layout

\begin_layout Standard
HTML 5 apporte de nouveaux élements permettant de mieux définir la structure
 sémantique d'un document.
 Une sémantique accompagne la composition des elements.
 Par exemple, quand un élément <article> est imbriqué dans un autre élement
 <article>, cette dernière représente un article relatif à l'élément contenant,
 comme un commentaire.
 Un élement <adress> dans un élement <article> est compris comme l'adresse
 de l'auteur de l'article.
\end_layout

\begin_layout Itemize
Section : permet de définir explicitement les sections d'un document 
\end_layout

\begin_layout Itemize
Article : représente un contenu autonome dans une page
\end_layout

\begin_layout Itemize
nav : représente une section de liens vers d'autre page ou des fragments
 de cette page
\end_layout

\begin_layout Itemize
aside : représente une section de la page dont le contenu est indirectement
 lié à ce qui l'entoure et qui pourrait être séparé de cet environnement
\end_layout

\begin_layout Itemize
header : représente un groupe d'introduction ou une aide à la navigation.
 Il peut contenir des éléments de titre, mais aussi d'autres éléments tels
 qu'un logo, un formulaire de recherche, etc.
\end_layout

\begin_layout Itemize
footer : représente le pied de page, ou de la section, ou de la racine de
 sectionnement la plus proche
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Architecture HTML 5
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\begin_layout Plain Layout


\backslash
includegraphics[width=300px]{img/architecture_Geekos_HTML5-293x300.jpg}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
ARIA
\end_layout

\begin_layout Standard
ARIA (Acessible Rich Internet Application) 
\begin_inset CommandInset citation
LatexCommand cite
key "ARIA"

\end_inset

 est la spécification d'une ontologie décrivant une interface graphique.
 Elle fournit des informations sur la structuration d'un document et décrit
 les élements qui composent l'interface au moyen d'un ensemble de rôles,
 d'états et de propriétés .
\end_layout

\begin_layout Paragraph
Rôle 
\end_layout

\begin_layout Standard
Les rôles permettent d'identifier la fonction de chaque elements d'une interface.
 Ils sont regroupé en trois catégories :
\end_layout

\begin_layout Itemize
Widget Roles : référence d'un ensemble de widget (alertdialog, button, slider,
 scrollbar, menu, etc)
\end_layout

\begin_layout Itemize
Document Structure Roles : décrit les structures qui organisent un document
 (article, definition, heading, ect)
\end_layout

\begin_layout Itemize
Landmark Roles : décrit les régions principales d'un document (main, navigation,
 search, etc)
\end_layout

\begin_layout Paragraph
Etats et propriétés
\end_layout

\begin_layout Standard
ARIA permet d'associer des états et propriétés à des wigets.
 
\end_layout

\begin_layout Standard
Un état est une configuration unique d'un objet.
 Par exemple, on peut définir l'état d'un bouton par l'état 
\emph on
aria-checked 
\emph default
qui peut prendre trois propriétés suivant l'interaction avec l'utilisateur
 : 
\emph on
true - false - mixed
\emph default
 
\end_layout

\begin_layout Standard
On peut associé un ensemble de propriété par exemple la valeur minimal ou
 maximal que l'on doit remplir dans un champs de saisit 
\emph on
aria-valuemin, aria-valuemax.
\end_layout

\begin_layout Standard
(http://www.w3.org/TR/wai-aria/states_and_properties#state_prop_att -> à compléter
)
\end_layout

\begin_layout Subsection
Discussion
\end_layout

\begin_layout Paragraph

\emph on
HTML 4
\end_layout

\begin_layout Standard

\emph on
HTML 4 fournit quelque idiome pour structurer les éléments d'un document.
 Il fournit un langage riche pour décrire les éléments de type texte et
 les hyperliens, mais un langage peu adapter pour décrire la structure d'une
 page web, dans le contexte actuel de l'exploitation de ses dernières.
 En effet le contenu décrit dans les pages web actuelles est très hétérogène,
 HTML 4 net permet pas de delimiter de manière explicite la structure sémantique
 d'une page.
 HTML 4 n'est pas un support assez riche pour être le support d'un méta-modèle
 exprimant le modèle d'une page web suivant nos besoins.
\end_layout

\begin_layout Standard
Id et class permette la strucuturation sémantique, à défault des balises
 de regroupement <div> et <span> 
\end_layout

\begin_layout Standard

\emph on
HTML 4 repose sur le notion de section et sous section.
 Le mécanisme reposant sur les division <div> ne permet pas de structurer
 le document de façon hierarchique mais ne donne pas un sens aux elements.
 Pour le conception d'un modéle on peut connaitre la struture d'un document
 mais on ne connaît pas les rôles associés aux documents.
 
\end_layout

\begin_layout Paragraph

\emph on
HTML 5
\end_layout

\begin_layout Standard

\emph on
Ces balises balises répondent à un besoin de structuration du document possedant
 des données hétérogènes.
 Contrairement à HTML 4, la sémantique de la structure et les relations
 des éléments est définit de manière explicite.
 Repose moins sur l'utilisation des id et class.
 On connait mieux le rôle des élément entre eux.
\end_layout

\begin_layout Paragraph

\emph on
ARIA
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Extraction structure 
\end_layout

\begin_layout Subsection
Introduction
\end_layout

\begin_layout Standard
L'extraction est la première phase du processus de restructuration.
 On peut la décrire comme le processus de décourverte des éléments qui composent
 un tout.
 Ici on veut récuperer la structure d'une page web.
 On veut extraire la structure d'une page web suivant le point de vu de
 notre méta-modele, c'est à dire découvrir les élements d'une page conforme
 aux élements de notre méta-modele.
 Le méta-modèle refletant le point de vu du lecteur de contenu, on peut
 également dire que l'on veut découvrir les éléments conforme au point de
 vu de l'utilisateur.
\end_layout

\begin_layout Standard
La difficulté de ce processus, comme soulevé dans l'introduction, provient
 du manque de sémantique des élements du langage de la norme actuelle de
 HTML (HTML 4), ainsi que le detournement des éléments syntaxiques dans
 la conception des pages par leur auteur.
\end_layout

\begin_layout Standard
HTML 4 utilise la notion de section et sous-section d'un document pour décrire
 sa structure.
 Une section est définit par un element de division <DIV> avec des elements
 d'entête (<h1>, <h2>, <h3>, ...).
 La relation de ces elements de division et d' entete conduisent à la structure
 du document.
\end_layout

\begin_layout Itemize
<DIV> définit une section mais à une valeur sémantique neutre.
 La valeur sémantique n'est connu que par son auteur au travers l'attribution
 de classe d'appartemence.
 Ces classes permettent d'associer une mise en forme aux élements.
 Il n'y a pas de contrainte sur l'imbrication des balises.
 On ne peut pas savoir si elles representent une section, une sous-section.
\end_layout

\begin_layout Itemize
Chaque section correspond à une partie d'un document.
 Ces parties ne décrivent pas systematiquement un contenu linéaire.
 Par exemple on peut trouver des blocs correspondant à des publicités, sans
 rapport avec la section parent.
 
\end_layout

\begin_layout Itemize
Chaque section représentent une partie du document, cependant certaine section
 contiennent pas d' informations en rapport avec le contenu du document
 mais sur le site web.
 C'est le cas des menus, des logos, etc...
 
\end_layout

\begin_layout Standard
En effet, le mécanisme de structuracturation des pages est trop générique,
 ce qui le rend ambiguie la sémantique des elements.
 Ce mécanisme repose en parti sur l'élement <DIV> qui permet de diviser
 le document, la sémantique de cet element est neutre, on ne connait pas
 la signification de cette division.
 De plus il n y'a pas de restiction dans les imbrications des élements <DIV>
 ce qui rend difficile de connaître les limites sémantiques.
 
\end_layout

\begin_layout Standard
L' ambiguité syntaxique Le processus d'extraction est rendu compliqué par
 les mécanisme trop générique et le détournement qui est fait de la syntaxe
 des élements du langage.
 
\end_layout

\begin_layout Standard
Le mécanisme de structuration générique proposé par HTML 4 est bien adapté
 la description d'une structure hierarhcique dans document mais peu à un
 contenu heterogène.
 On ne pas identifier le rôle des différents élements dans la structure.
\end_layout

\begin_layout Standard
La mauvaise utilisation des balises.
 Par exemple, la balise <div> (dans le spécification de HTML 4) est utilisé
 pour divisé la structure du document de manière hierarchique, or en pratique
 elle est également utilisé pour appliquer un style de mise en forme sur
 un ensemble d'élement.
 La balise <hr> est un autre exemple de dérive.
\end_layout

\begin_layout Standard
Il est en résulte que la structure sous jacente peut ne pas être représentatif
 de l'intention de l'auteur du document.
 En d'autre terme la représentation visuelle peut ne pas être coherente
 avec la structure sous-jacente.
 Quelques approches (citer quelques articles) Nous traitons ici d'une approche
 par segmention visuel, une segmentation basé sur l'interpretation qu'un
 humain à d'une page au travers d'un navigateur internet.
 Puis nous parlemenrons d'une approche basé sur un modèle probabilistique.
\end_layout

\begin_layout Subsection
Approche segmentation visuelle
\end_layout

\begin_layout Standard
L'approche proposé par les auteurs 
\begin_inset CommandInset citation
LatexCommand cite
key "Extr_content_struc_visual_representation"

\end_inset

 présente un algorithme de partitionnement basé sur les élements de mise
 en forme des documents web.
 L'algorithme pourcourt le DOM de la page web et partitionne l'arbre suivant
 des heuristiques prenants en compte le type de noeud rencontré, les noeuds
 frère et parent.
\end_layout

\begin_layout Subsection
Approche stochastique
\end_layout

\begin_layout Standard
L'approche proposé par les auteurs 
\begin_inset CommandInset citation
LatexCommand cite
key "mod_stochastique"

\end_inset

 jjjj
\end_layout

\begin_layout Subsection
Discution
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Detection d'objet
\end_layout

\begin_layout Subsection
Introduction
\end_layout

\begin_layout Standard
On s'interesse ici au sens des sous-structures recupérés dans la phase d'extract
ion.
 Plus précisement on veut savoir à quel element de notre méta-modèle correspond
 la sous-structure.
 On veut faire correspondre les sous-structures aux elements de notre méta-modèl
e.
\end_layout

\begin_layout Standard
L'environnement web impose certaine contraintes sur notamment l'évolution
 des structures de données, mais également la diversité des arcthitecutes
 d'un site à l'autre.
 Cependant on peut constater qu'avec l'utilisation massive de 
\end_layout

\begin_layout Standard
La section précendente décrit un moyen d'extraire la structure d'une page.
 On obtient une structure semantique de la page.
 On s'interesse à reconnaitre les éléments de cette structure suivant des
 elements de notre modèles.
\end_layout

\begin_layout Standard
La contrainte imposée par le web est la diversité des structures ayant la
 même fonction.
\end_layout

\begin_layout Subsection
Wrapper
\end_layout

\begin_layout Subsection
Tree-to-tree distance
\end_layout

\begin_layout Standard
Une approche est la comparaison d'arbre.
 Cette approche consiste à trouver la plus petite ou la moins coûteuse séquence
 d'opération d'édition (substitution, suppression et insertion) qui permet
 la transformation d'un arbre vers un autre.
 
\end_layout

\begin_layout Standard
Notons 
\begin_inset Formula $\Lambda$
\end_inset

 un noeud vide.
 Une opération d'édition est ecrit 
\begin_inset Formula $b\rightarrow c$
\end_inset

 , ou b et c sont soit un noeud, soit 
\begin_inset Formula $\Lambda$
\end_inset

 .
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $b\rightarrow c$
\end_inset

 est une opération de substition si 
\begin_inset Formula $b\neq\Lambda$
\end_inset

 et 
\begin_inset Formula $c\neq\Lambda$
\end_inset

, 
\end_layout

\begin_layout Itemize
une opération de suppression si 
\begin_inset Formula $b\neq\Lambda\doteq c$
\end_inset

, 
\end_layout

\begin_layout Itemize
et une opération d'insertion si 
\begin_inset Formula $b=\Lambda\neq c$
\end_inset


\end_layout

\begin_layout Standard
Pour exprimer la séquence d'opération élémentaire qui transforme l'arbre,
 on utilise le concept de mapping, introduit 
\begin_inset CommandInset citation
LatexCommand cite
key "tree-to-tree"

\end_inset

.
 Un mapping établie une correspondance un-à-un entre les nœuds de deux arbres
 ordonnés et qui préservent l'ordre des nœuds.
 
\end_layout

\begin_layout Definition*
Un Mapping 
\begin_inset Formula $M$
\end_inset

 de l'arbre T1 vers l'arbre T2 est un ensemble de paire ordonnée d'entier
 (i, j), 
\begin_inset Formula $1\leqslant i\leqslant n1$
\end_inset

, 
\begin_inset Formula $1\leq j\leq n2$
\end_inset

, satisfaisant les conditions suivantes, pour tous 
\begin_inset Formula $(i1,j1),(i2,j2)\in M$
\end_inset

:
\end_layout

\begin_layout Itemize
i1=i2 si et seulement si, j1=j2 (one-to-one condition);
\end_layout

\begin_layout Itemize
t1[i1] est à droite de t1[i2], si est seulement si, t2[j1] est à gauche
 de t2[j2] (preservation de l'ordre des noeuds frères);
\end_layout

\begin_layout Itemize
t1[i1] est un ancêtre de t1[i2] si et seulement si, t2[j1] est un ancêtre
 de t2[j2] (preservation de l'ordre des ancêtres);
\end_layout

\begin_layout Definition*
Soit M un mapping entre les arbres T1 et T2 décrivant des opérations de
 modification.
 S est l'ensemble de pair 
\begin_inset Formula $(i,j)\in M$
\end_inset

, D l'ensemble des nœuds T1[i] n'ayant pas de paire 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $(i,j)\in M$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 , et I l'ensemble des nœuds T2[j] n'ayant pas de paire 
\begin_inset Formula $(i,j)\in M$
\end_inset

.
 Le coût du mapping est donné par 
\begin_inset Formula $|S|p+|I|q+|D|r$
\end_inset

| , ou p est le coût des substitution non identique, q est le coût des insertion
s (1), r est le coût d'une suppression (1), le coût des substitution identique
 est 0.
 
\end_layout

\begin_layout Paragraph*
Quatre mesures de distances 
\end_layout

\begin_layout Standard
Plusieurs mesures de distance existent, chacune d'elle mettant en avant
 certaine propriétés fonctionnelles d'une structure.
 Ces mesures de distance imposent des contraintes sur le mapping.
 Dans la littérature en recense principalement 4 mesures : Distance de modificat
ion, distance d'alignement, distance de sous-arbre isolé, distance descendante.
\end_layout

\begin_layout Subparagraph
Distance de modification
\end_layout

\begin_layout Standard
C'est le coût minimum du mapping d'un arbre T1 vers T2.
 
\end_layout

\begin_layout Subparagraph
Distance d'alignement
\end_layout

\begin_layout Standard
Coût minimum du mapping n'ayant que des opérations d'insertion de nœud pour
 que T1 et T2 soit isomorphe.
 Principalement utile pour connaître le coût de recouvrement entre deux
 arbres.
 Utile pour faire ressortir les régions homologue ou similaire d'une structure.
\end_layout

\begin_layout Subparagraph
Distance de sous-arbre isolé
\end_layout

\begin_layout Standard
La distance est obtenu en imposant sur le mapping la contrainte que deux
 sous-arbres disjoints de T1 doivent être mappés à deux sous-arbres disjoints
 de T2.
 S'avère très utile dans le comparaison d'arbre de classification
\begin_inset CommandInset citation
LatexCommand cite
key "Takana"

\end_inset

.
 Elle correspond au côut minimum du mapping de sous-arbres isolés de T1
 vers T2.
\end_layout

\begin_layout Subparagraph

\emph on
Distance descendante
\end_layout

\begin_layout Standard

\emph on
Utilisé pour trouver la plus grande sous-strucucture commune entre deux
 arbres (...)
\end_layout

\begin_layout Paragraph
Algorithmes
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "tree-to-tree"

\end_inset

 propose un algorithme de programmation dynamique pour résoudre la question
 de distance d'arbre en temps séquentiel 
\begin_inset Formula $O(|T1|\times|T2|\times min(depth(T1),leaves(T1))\times min(depth(T2),leaves(T2)))$
\end_inset

 .
\end_layout

\begin_layout Subsection
Arbre de décision
\end_layout

\begin_layout Subsection
Discution
\end_layout

\begin_layout Subparagraph
Tree-to-tree distance
\end_layout

\begin_layout Standard
Dans le cadre de notre problématique, il est intéressant d'utiliser la distance
 de modification entre la structure d'un objet définit à priori et une structure
 extraite d'une page web.
 Par exemple, si nous souhaitons connaître le rôle d'un objet extrait d'une
 page, on peut le comparer à la collection d'objet définit à priori et détermine
r de quel objet il est le plus proche.
 Cette distance à un rôle d'indice de similarité.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "bibliographie/biblio"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
